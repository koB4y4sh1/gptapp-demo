from src.domain.model.prompt.base import BasePrompt

class ImagePrompt(BasePrompt):
    """
    スライド作成用プロンプトを生成するクラス
    """

    PROMPT_TEMPLATE = """
        # 役割
        あなたはデザイナーです。  
        タイトルについての「アイコン風の画像」を作成してください。

        # インプット
        - タイトル: {title}
        - 画像の内容: {content}
          - 画像についての補足説明: {note}
        - その他のデザイン要素:
          - 視点: 指定がない場合は自由に設定
          - 配色:
            - メインカラー: 柔らかく落ち着いた色合い（パステルカラー中心）
            - サブカラー: ホワイトカラー
            - アクセントカラー: RGB(116,198,109), RGB(254,190,105), RGB(242,99,95)
          - スタイル: 
            - シンプルで親しみやすい線画スタイル
            - ビジネスや日常生活をテーマにした汎用性の高いイラスト
          - 空間構成: 指定がない場合は自由に設定

        # 配色の基本ルール
        - メインカラー（25%）: デザインの主役となる色。全体の印象を決定づけます。
        - サブカラー（70%）: 背景や余白など、広い面積に使用される色。メインカラーを引き立てます。
        - アクセントカラー（5%）: 強調したい要素や注目させたい部分に使用する色。全体のバランスを整えます。

        # 命令（ステップ）
        以下の手順に従って、画像生成プロンプトを作成してください：

        1. **アイデア出し**  
          スライドのテーマをもとに、イメージを視覚化するアイデアを6つ箇条書きでブレインストーミングしてください。

        2. **表現スタイルの決定**  
          各アイデアについて、次の要素を検討・設定してください：
          - イラスト表現（例: 3D、フラット、手描き風など）
          - 配色（指定がある場合はその範囲内で）
          - 構図（アイコンとしてバランスの良い配置）
          - その他の指定がある場合はそれを優先的に反映

        3. **アイデアの評価と選定**  
          「キャラクターがかわいいかどうか」を評価軸として、6つのアイデアの中から最も良い2つを選んでください。

        # アウトプット形式
        以下の設定に従って出力してください：

        -- 画像の設定  
        - アスペクト比: 1:1
        """

    def __init__(self, title: str, content: str, note: str):
        self.title = title
        self.content = content
        self.note = note

    def build_prompt(self) -> str:
        """
        インスタンスの情報をもとにプロンプト文字列を生成する
        """
        return self.PROMPT_TEMPLATE.format(
            title=self.title,
            content=self.content,
            note=self.note
        )

